#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define U_PST &kp LC(V)
#define U_CPY &kp LC(C)
#define U_CUT &kp LC(X)
#define U_UND &kp LC(Z)
#define U_RDO &kp LC(LS(Z))
#define U_MIC &kp LG(LA(K))

#define L0 0
#define L1 1
#define L2 2

#define LOC_G 2
#define LOC_M (LOC_G+1)

#define LOC_EXC 8
#define LOC_V (LOC_EXC+1)

#define LOC_X 25
#define LOC_F (LOC_X+1)
#define LOC_L (LOC_X+2)

#define LOC_O 32
#define LOC_Y (LOC_U+2)
#define LOC_K (LOC_U+3)

#define HT_1 &ht F1 NUM_1
#define HT_2 &ht F2 NUM_2
#define HT_3 &ht F3 NUM_3
#define HT_4 &ht F4 NUM_4
#define HT_5 &ht F5 NUM_5
#define HT_6 &ht F6 NUM_6
#define HT_7 &ht F7 NUM_7
#define HT_8 &ht F8 NUM_8
#define HT_9 &ht F9 NUM_9
#define HT_10 &ht F10 NUM_0
#define HT_11_AST &ht F11 KP_ASTERISK
#define HT_12_PLUS &ht F12 KP_PLUS
#define HT_BT_MINUS &ht BT_CLR KP_MINUS 
#define HT_RDO_UND &ht U_RDO U_UND 
/*
                                 L0         
                                                                  
      ╭─────┬─────┬─────╮                  ╭─────┬─────┬─────╮
      │  G [J] M  │  P  │                  │  ?  │ ! [bspc] V│
╭─────┼─────┼─────┼─────┼─────╮      ╭─────┼─────┼─────┼─────┼─────╮
│  R  │  S  │  N  │  D  │  B  │      │  .  │  A  │  E  │  I  │  H  │
├─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┤
│  X  │  F [Z] L     C  │  W  │      │  ,  │  U  |  O [Q] Y  │  K  │
╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
   [-shft-]       │  L1 │  T  │      │ spc │  L2 │        [-shft-]
                  ╰─────┴─────╯      ╰─────┴─────╯       


                                 L1                                  
                                                                               
      ╭─────┬─────┬─────╮                  ╭─────┬─────┬─────╮        
      │  `  │  (  │  )  │                  │ esc │  ↑  │ bspc│        
╭─────┼─────┼─────┼─────┼─────╮      ╭─────┼─────┼─────┼─────┼─────╮  
│  /  │  \  │  {  │  }  │  ~  │      │ pgup│  ←  │  ↓  │  →  │ ret │  
├─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┤
│  <  │  >  │  [  │  ]  │ gui │      │ pgdn│ home│ tab │ end │ del │  
╰─────┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯  
                  │  L1 │ sft │      │ ctrl│ alt │                    
                  ╰─────┴─────╯      ╰─────┴─────╯                    


                                 L2
      ╭─────┬─────┬─────╮                  ╭─────┬─────┬─────╮
 {F11}│{F}7 │{F}8 │{F}9 │{F12}             │  &  │  |  │  ^  │
╭──┴──┼─────┼─────┼─────┼──┴──╮      ╭─────┼─────┼─────┼─────┼─────╮
│  *  │{F}4 │{F}5 │{F}6 │  +  │      │  @  │  '  │  "  │  =  │  ;  │
├─────┼─────┼─────┼─────┼─────┤      ├─────┼─────┼─────┼─────┼─────┤
│  0  │{F}1 │{F}2 │{F}3 │  -  ├{bt_c}│ cut │  $  │  %  │  #  │  _  │
╰──┬──┴─────┴─────┼─────┼─────┤      ├─────┼─────┼─────┴─────┴─────╯
 {F10}            │ cpy │ pst │      │ udo │  L2 │      
                  ╰─────┴─────╯      ╰──┬──┴─────╯      
                                      {rdo}
*/
/ {
        keymap {
                compatible = "zmk,keymap";
                L0 {
                        label = "L0";
                        bindings = <
/*                                       ╭───────────────────┬───────────────────┬───────────────────╮                                              ╭───────────────────┬───────────────────┬───────────────────╮                                      */
     &none                  &none              &kp G                 &kp M                &kp P              &none                      &none           &kp QUESTION       &kp EXCLAMATION          &kp V               &none            &none
/*                   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮      ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮                  */
     &none                  &kp R              &kp S                 &kp N                &kp D              &kp B                     &kp DOT             &kp A               &kp E                &kp I               &kp H            &none
/*                   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                  */
     &none                  &kp X              &kp F                 &kp L                &kp C              &kp W                     &kp COMMA           &kp U               &kp O                &kp Y               &kp K            &none
/*                   ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                  */
                                                                    &none                &sl L1             &kp T                     &kp SPACE             &sl L2           &none
/*                                                                               ╰───────────────────┴───────────────────╯      ╰───────────────────┴───────────────────╯                                                                              */
                             >;
                     };
                     L1 {
                             label = "L1";
                             bindings = <
/*                                       ╭───────────────────┬───────────────────┬───────────────────╮                                              ╭───────────────────┬───────────────────┬───────────────────╮                                      */
     &none                   &none             &kp GRAVE           &kp LPAR            &kp RPAR            &none                      &none               &kp ESC             &kp UP              &kp BSPC              &none            &none
/*                   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮      ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮                  */
     &none                 &kp SLASH         &kp BACKSLASH         &kp LBRC            &kp RBRC            &kp TILDE                 &kp PG_UP           &kp LEFT            &kp DOWN             &kp RIGHT           &kp ENTER          &none
/*                   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                  */
     &none                   &kp LT             &kp GT             &kp LBKT            &kp RBKT            &kp LGUI                  &kp PG_DN           &kp HOME            &kp TAB              &kp END             &kp DEL            &none
/*                   ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                  */
                                                                  &none                &none               &kp LSHFT                 &kp LCTRL           &kp LALT             &none
/*                                                                               ╰───────────────────┴───────────────────╯      ╰───────────────────┴───────────────────╯                                                                              */
                             >;
                     };
                     L2 {
                             label = "L2";
                             bindings = <
/*                                       ╭───────────────────┬───────────────────┬───────────────────╮                                              ╭───────────────────┬───────────────────┬───────────────────╮                                      */
     &none                   &none               HT_7                HT_8                HT_9              &none                       &none            &kp AMPERSAND        &kp PIPE           &kp CARET             &none              &none
/*                   ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮      ╭───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────╮                  */
     &none                   HT_11_AST           HT_4                HT_5                HT_6             HT_12_PLUS                  &kp AT_SIGN         &kp SQT              &kp DQT            &kp EQUAL           &kp SEMI           &none
/*                   ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┼───────────────────┼───────────────────┤                  */
     &none                   HT_10               HT_1                HT_2                HT_3             HT_BT_MINUS                  U_CUT             &kp DOLLAR           &kp PERCENT        &kp HASH          &kp UNDERSCORE        &none
/*                   ╰───────────────────┴───────────────────┴───────────────────┼───────────────────┼───────────────────┤      ├───────────────────┼───────────────────┼───────────────────┴───────────────────┴───────────────────╯                  */
                                                                   &none                U_CPY               U_PST                     HT_RDO_UND           &none             &none
/*                                                                               ╰───────────────────┴───────────────────╯      ╰───────────────────┴───────────────────╯                                                                              */
                             >;
                     };
        };
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "hold tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_j {
               timeout-ms = <60>;
               key-positions = <LOC_G LOC_M>;
               bindings = <&kp J>;
               layers = <0>;
        };
        combo_lshift {
               timeout-ms = <60>;
               key-positions = <LOC_X LOC_F>;
               bindings = <&kp LSHFT>;
               layers = <0>;
        };
        combo_z {
               timeout-ms = <60>;
               key-positions = <LOC_F LOC_L>;
               bindings = <&kp Z>;
               layers = <0>;
        };
        combo_bspc {
               timeout-ms = <60>;
               key-positions = <LOC_EXC LOC_V>;
               bindings = <&kp BSPC>;
               layers = <0>;
        };
        combo_q {
               timeout-ms = <45>;
               key-positions = <LOC_O LOC_Y>;
               bindings = <&kp Q>;
               layers = <0>;
        };
        combo_rshift {
               timeout-ms = <60>;
               key-positions = <LOC_Y LOC_K>;
               bindings = <&kp RSHFT>;
               layers = <0>;
        };
    };
};
