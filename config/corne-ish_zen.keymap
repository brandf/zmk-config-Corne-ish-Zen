#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define U_PST &kp LC(V)
#define U_CPY &kp LC(C)
#define U_CUT &kp LC(X)
#define U_UND &kp LC(Z)
#define U_RDO &kp LC(LS(Z))
#define U_MIC &kp LG(LA(K))

#define BASE 0
#define NAV 1
#define SYM 2
#define NUM 3

#define LOC_X 25
#define LOC_F (LOC_X+1)
#define LOC_L (LOC_X+2)
#define LOC_C (LOC_X+3)

#define LOC_U 31
#define LOC_O (LOC_U+1)
#define LOC_Y (LOC_U+2)
#define LOC_K (LOC_U+3)

#define LOC_NAV 37
#define LOC_SYM (LOC_NAV+3)
/*
                                                                             Base

                                                   ╔═════╦═════╦═════╗                  ╔═════╦═════╦═════╗
                                                   ║  G  ║  M  ║  P  ║                  ║  '  ║  "  ║  V  ║
                                             ╔═════╬═════╬═════╬═════╬═════╗      ╔═════╬═════╬═════╬═════╬═════╗
                                             ║  R  ║  S  ║  N  ║  D  ║  B  ║      ║  .  ║  A  ║  E  ║  I  ║  H  ║
                                             ╠═════╬═════╬═════╬═════╬═════╣      ╠═════╬═════╬═════╬═════╬═════╣
                                             ║  X  ║  F [Z] L [J] C  ║  W  ║      ║  ,  ║  U [_] O [Q] Y  ║  K  ║
                                             ╚═════╩═════╩═════╬═════╬═════╣      ╠═════╬═════╬═════╩═════╩═════╝
                                                [-shft-]       ║ nav ║  T  ║      ║ spc ║ sym ║        [-shft-]
                                                               ╚═════╩═════╝      ╚═════╩═════╝
                                                                 │ │                      │ │
                                                                 │ │                      │ │
                                                                 │ │                      │ │
                                                                 │ │                      │ │
                                                                 │ │                      │ │
                        Nav / Media / Mod ◄──────────────────────┘ └──────────┬───────────┘ └─────────────────────────► Symbols
                                                                              │
      ╔═════╦═════╦═════╗                  ╔═════╦═════╦═════╗                │                ╔═════╦═════╦═════╗                  ╔═════╦═════╦═════╗
      ║ cpy ║ pst ║ mic ║                  ║ esc ║  ↑  ║ bspc║                │                ║  `  ║  (  ║  )  ║                  ║  &  ║  ?  ║  -  ║
╔═════╬═════╬═════╬═════╬═════╗      ╔═════╬═════╬═════╬═════╬═════╗          │          ╔═════╬═════╬═════╬═════╬═════╗      ╔═════╬═════╬═════╬═════╬═════╗
║ cut ║ gui ║ alt ║ ctrl║ volx║      ║ pgup║  ←  ║  ↓  ║  →  ║ ret ║          │          ║  /  ║  \  ║  {  ║  }  ║  *  ║      ║  =  ║  $  ║  %  ║  ^  ║  +  ║
╠═════╬═════╬═════╬═════╬═════╣      ╠═════╬═════╬═════╬═════╬═════╣          │          ╠═════╬═════╬═════╬═════╬═════╣      ╠═════╬═════╬═════╬═════╬═════╣
║ sft ║ und ║ rdo ║ vol-║ vol+║      ║ pgdn║ home║ tab ║ end ║ del ║          │          ║  <  ║  >  ║  [  ║  ]  ║  ~  ║      ║  |  ║  !  ║  @  ║  #  ║  ;  ║
╚═════╩═════╩═════╬═════╬═════╣      ╠═════╬═════╬═════╩═════╩═════╝          │          ╚═════╩═════╩═════╬═════╬═════╣      ╠═════╬═════╬═════╩═════╩═════╝
                  ║ nav ║     ║      ║     ║     ║                            │                            ║     ║     ║      ║     ║ sym ║
                  ╚═════╩═════╝      ╚═════╩═════╝                            │                            ╚═════╩═════╝      ╚═════╩═════╝
                                                                              │
                                                                              │
                                                                              ▼
                                                                           Numbers
                                                   ╔═════╦═════╦═════╗                  ╔═════╦═════╦═════╗
                                                   ║  F7 ║  F8 ║  F9 ║                  ║  7  ║  8  ║  9  ║
                                             ╔═════╬═════╬═════╬═════╬═════╗      ╔═════╬═════╬═════╬═════╬═════╗
                                             ║ F11 ║  F4 ║  F5 ║  F6 ║ F12 ║      ║  .  ║  4  ║  5  ║  6  ║ ret ║
                                             ╠═════╬═════╬═════╬═════╬═════╣      ╠═════╬═════╬═════╬═════╬═════╣
                                             ║ F10 ║  F1 ║  F2 ║  F3 ║     ║      ║  ,  ║  1  ║  2  ║  3  ║  0  ║
                                             ╚═════╩═════╩═════╬═════╬═════╣      ╠═════╬═════╬═════╩═════╩═════╝
                                                               ║ num ║     ║      ║     ║ num ║
                                                               ╚═════╩═════╝      ╚═════╩═════╝
*/
/ {
        keymap {
                compatible = "zmk,keymap";
                BASE {
                        label = "Base";
                        bindings = <
/* ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗        ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗ */
     &none                  &none             &kp G                 &kp M                 &kp P              &none                      &none              &kp SQT             &kp DQT              &kp V             &none              &none
/* ╔═════════════════╦═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╦═════════════════╗ */
     &none                  &kp R              &kp S                &kp N                 &kp D              &kp B                     &kp DOT             &kp A                &kp E               &kp I               &kp H            &none
/* ╚═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╝ */
     &none                  &kp X /* &kp LSHFT */  &kp F /* &kp Z */ &kp L   /* &kp J */  &kp C              &kp W                     &kp COMMA           &kp U  /* &kp _ */   &kp O  /* &kp Q */  &kp Y  /* &kp LSHFT */  &kp K        &none
/* ╚═════════════════╩═══════════════════╩═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╩═══════════════════╩═════════════════╝ */
                                                                    &none                &sl NAV            &trans                    &trans             &sl SYM              &none
/*                                                           ╚═══════════════════╩═══════════════════╩═════════════════╝        ╚═════════════════╩═══════════════════╩═══════════════════╝                                                           */
                             >;
                     };
                     NAV {
                             label = "Nav";
                             bindings = <
/* ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗        ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗ */
     &none                   &none              U_CPY               U_PST               U_MIC              &none                      &none             &kp ESC             &kp UP              &kp BSPC            &none                 &none
/* ╔═════════════════╦═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╦═════════════════╗ */
     &none                   U_CUT           &kp LGUI              &kp LALT           &kp LCTRL          &kp C_MUTE                 &kp PG_UP          &kp LEFT            &kp DOWN             &kp RIGHT           &kp ENTER             &none
/* ╚═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╝ */
     &none                 &kp LSHFT            U_UND               U_RDO          &kp C_VOLUME_DOWN   &kp C_VOLUME_UP              &kp PG_DN          &kp HOME            &kp TAB              &kp END             &kp DEL               &none
/* ╚═════════════════╩═══════════════════╩═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╩═══════════════════╩═════════════════╝ */
                                                                  &none               &to BASE              &trans                    &trans              &sl NUM             &none
/*                                                           ╚═══════════════════╩═══════════════════╩═════════════════╝        ╚═════════════════╩═══════════════════╩═══════════════════╝                                                           */
                             >;
                     };
                     SYM {
                             label = "Sym";
                             bindings = <
/* ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗        ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗ */
     &none                   &none             &kp GRAVE           &kp LPAR            &kp RPAR            &none                       &none           &kp AMPERSAND       &kp QUESTION         &kp KP_MINUS           &none              &none
/* ╔═════════════════╦═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╦═════════════════╗ */
     &none                 &kp SLASH         &kp BACKSLASH         &kp LBRC            &kp RBRC        &kp KP_ASTERISK               &kp EQUAL         &kp DOLLAR          &kp PERCENT          &kp CARET           &kp KP_PLUS          &none
/* ╚═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╝ */
     &none                   &kp LT             &kp GT             &kp LBKT            &kp RBKT           &kp TILDE                  &kp PIPE        &kp EXCLAMATION       &kp AT_SIGN          &kp HASH            &kp SEMI             &none
/* ╚═════════════════╩═══════════════════╩═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╩═══════════════════╩═════════════════╝ */
                                                                   &none               &sl NUM              &trans                    &trans            &to BASE             &none
/*                                                           ╚═══════════════════╩═══════════════════╩═════════════════╝        ╚═════════════════╩═══════════════════╩═══════════════════╝                                                           */
                             >;
                     };
                     NUM {
                             label = "Num";
                             bindings = <
/* ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗        ╔═════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═══════════════════╦═════════════════╗ */
     &none                  &none               &kp F7              &kp F8              &kp F9              &none                    &none              &kp NUM_7           &kp NUM_8            &kp NUM_9            &none               &none
/* ╔═════════════════╦═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╦═════════════════╗ */
     &none                  &kp F11             &kp F4              &kp F5              &kp F6              &kp F12                  &kp DOT            &kp NUM_4           &kp NUM_5            &kp NUM_6          &kp ENTER             &none
/* ╚═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╝ */
     &none                  &kp F10             &kp F1              &kp F2              &kp F3              &none                    &kp COMMA          &kp NUM_1           &kp NUM_2            &kp NUM_3          &kp NUM_0             &none
/* ╚═════════════════╩═══════════════════╩═══════════════════╬═══════════════════╬═══════════════════╬═════════════════╣        ╠═════════════════╬═══════════════════╬═══════════════════╬═══════════════════╩═══════════════════╩═════════════════╝ */
                                                                  &none                 &to BASE            &trans                    &trans           &to BASE               &none
/*                                                           ╚═══════════════════╩═══════════════════╩═════════════════╝        ╚═════════════════╩═══════════════════╩═══════════════════╝                                                           */
                             >;
                     };
        };

      macros {
        ZMK_MACRO(macro_qu,
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&macro_tap &kp Q &kp U>;
        );
     };
     combos {
        compatible = "zmk,combos";
        combo_lshift {
               timeout-ms = <60>;
               key-positions = <LOC_X LOC_F>;
               bindings = <&kp LSHFT>;
               layers = <0>;
        };
        combo_z {
               timeout-ms = <60>;
               key-positions = <LOC_F LOC_L>;
               bindings = <&kp Z>;
               layers = <0>;
        };
        combo_j {
               timeout-ms = <60>;
               key-positions = <LOC_L LOC_C>;
               bindings = <&kp J>;
               layers = <0>;
        };
        combo__ {
               timeout-ms = <60>;
               key-positions = <LOC_U LOC_O>;
               bindings = <&kp UNDERSCORE>;
               layers = <0>;
        };
        combo_q {
               timeout-ms = <60>;
               key-positions = <LOC_O LOC_Y>;
               bindings = <&kp Q>;
               layers = <0>;
        };
        combo_qu {
               timeout-ms = <75>;
               key-positions = <LOC_U LOC_O LOC_Y>;
               bindings = <&macro_qu>;
               layers = <0>;
        };
        combo_rshift {
               timeout-ms = <60>;
               key-positions = <LOC_Y LOC_K>;
               bindings = <&kp LSHFT>;
               layers = <0>;
        };
        combo_num {
               timeout-ms = <60>;
               key-positions = <LOC_NAV LOC_SYM>;
               bindings = <&sl NUM>;
               layers = <0>;
        };
    };
};
